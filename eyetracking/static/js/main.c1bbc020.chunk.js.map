{"version":3,"sources":["App.module.css","Sessions.module.css","Login.module.css","Main.module.css","Sessions.tsx","DataManager.ts","Constants.ts","Login.tsx","SessionDetails.tsx","Main.tsx","App.tsx","index.tsx","SessionDetails.module.css"],"names":["module","exports","App","tabs","sessions","row","nowrap","headerRow","rows","textField","menuItem","select","selectWrapper","inputLabel","rank","date","container","logo","loginBox","textWrap","buttonWrap","appBar","grow","menuButton","person","main","Mode","cache","fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","token","options","result","data","wrap","_context","prev","next","abrupt","process","headers","fetch","concat","sent","ok","json","stop","_x","_x2","_x3","apply","this","arguments","Login","p","onLogin","_useState","useState","_useState2","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","login","useCallback","value","undefined","method","body","JSON","stringify","Username","Password","onKeyPress","e","key","react_default","createElement","Grid_default","className","styles","spacing","justify","alignItems","direction","item","Paper_default","TextField_default","label","onChange","target","Button_default","variant","color","onClick","getSortValue","mode","Name","lastName","Rank","Platform","platformName","Test","testName","Date","sortBy","groups","forEach","sortVal","push","keys","sort","map","id","addTab","name","Tab_default","tab","addMenuItem","MenuItem_default","addSelect","currentValue","setValue","values","arr","b","localeCompare","InputLabel_default","htmlFor","Select_default","inputProps","renderGroup","expanded","checked","parentKey","indent","onClickExpand","setCheckedResult","onSelectSessions","group","children","first","isExpanded","resultId","style","paddingLeft","Checkbox_default","index_es","platform","dateString","subjects","Fragment","expand","content","firstName","IconButton_default","aria-label","KeyboardArrowDown_default","KeyboardArrowRight_default","renderHeader","SessionsComponent","sessionInfo","search","setSearch","setMode","_useState5","_useState6","setRank","_useState7","_useState8","test","setTest","_useState9","_useState10","setPlatform","_useState11","_useState12","setDate","_useState13","_useState14","setExpanded","_useState15","_useState16","setChecked","filtered","filter","platformId","testId","toLowerCase","includes","filterSearch","results","it","onChangeTab","onChangeSearch","newVal","assign","newChecked","defineProperty","toggleAllChecked","length","session","onClickCompare","window","confirm","Tabs_default","elevation","margin","InputProps","classes","input","ranks","platforms","tests","dates","Sessions","_useState17","_useState18","sessionData","setSessionData","useEffect","processData","d","out","dateCollected","toDateString","rankId","subjectId","user","then","_ref2","Sessions_SessionsComponent","Algorithms","getChartOptions","lines","chart","zoomType","title","text","xAxis","yAxis","series","line","type","Subjects","setResults","algorithm","setAlgorithm","chartOptions","setChartOptions","processResults","resultData","reduce","i","toFixed","Math","max","leftValue","rightValue","Promise","all","res","sessionDetails","card","personDetails","light","chartCard","cardContent","selectAlgorithm","alg","highcharts_react_min_default","highcharts","Highcharts","highlights","highlightsContent","highlightsText","ArrowUpward_default","fontSize","icon","arrowUp","ArrowDownward_default","arrowDown","loading","Main","selectedSessions","setSelectedSessions","goBack","AppBar_default","position","Toolbar_default","ArrowBack_default","Typography_default","Person_default","SessionDetails","src_Sessions","theme","createMuiTheme","typography","useNextVariants","palette","primary","dark","contrastText","secondary","setUser","loggedInUser","src_Login","src_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c1bbc020.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3fiks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"Sessions_tabs__12Mby\",\"sessions\":\"Sessions_sessions__3voH3\",\"row\":\"Sessions_row__3Q0o3\",\"nowrap\":\"Sessions_nowrap__HsAg-\",\"headerRow\":\"Sessions_headerRow__2N5Np\",\"rows\":\"Sessions_rows__v2Eng\",\"textField\":\"Sessions_textField__Ry_2D\",\"menuItem\":\"Sessions_menuItem__aE578\",\"select\":\"Sessions_select__2BQj_\",\"selectWrapper\":\"Sessions_selectWrapper__2-m7L\",\"inputLabel\":\"Sessions_inputLabel__49xJk\",\"rank\":\"Sessions_rank__1AhF3\",\"date\":\"Sessions_date__2uRjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1Z3Z_\",\"logo\":\"Login_logo__3LaPA\",\"loginBox\":\"Login_loginBox__2VFmZ\",\"textWrap\":\"Login_textWrap__1HsmH\",\"buttonWrap\":\"Login_buttonWrap___kcHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"Main_appBar__29VRX\",\"container\":\"Main_container__264vY\",\"grow\":\"Main_grow__1nOLj\",\"menuButton\":\"Main_menuButton__3LWfm\",\"person\":\"Main_person__rAaN6\",\"main\":\"Main_main__2CiY1\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport IconArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport styles from './Sessions.module.css';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { SessionData, __DEV__ } from './Constants';\nimport { Button } from '@material-ui/core';\nimport { fetchData } from './DataManager';\n\ninterface Props {\n    user: any;\n    onSelectSessions: (sessions: SessionData[]) => void;\n}\ninterface PropsSessions extends Props {\n    data: SessionData[];\n    sessionInfo: SessionInfo;\n}\ninterface SessionInfo {\n    platforms: { [key: number]: string };\n    ranks: { [key: number]: string };\n    dates: { [key: number]: string };\n    subjects: { [key: number]: string };\n    tests: { [key: number]: string };\n}\ntype CheckedState = { [id: number]: boolean };\ntype ExpandedState = { [id: string]: boolean };\n\nenum Mode {\n    Name = 'Name',\n    Rank = 'Rank',\n    Platform = 'Platform',\n    Date = 'Date',\n    Test = 'Test'\n}\n\nconst Indent = 40;\n\nconst getSortValue = (item: SessionData, mode: string) =>\n{\n    return (mode === Mode.Name && item.lastName) ||\n           (mode === Mode.Rank && item.rank) ||\n           (mode === Mode.Platform && item.platformName) ||\n           (mode === Mode.Test && item.testName) ||\n           (mode === Mode.Date && item.date) || '';\n};\n\nconst filterSearch = (item: SessionData, search: string, mode: string) =>\n{\n    switch (mode)\n    {\n        case Mode.Name:\n            return item.lastName.toLowerCase().includes(search) || item.firstName.toLowerCase().includes(search);\n        case Mode.Rank:\n            return item.rank.includes(search);\n        case Mode.Platform:\n            return item.platformName.includes(search);\n        case Mode.Test:\n            return item.testName.includes(search);\n        default:\n            return true;\n    }\n};\n\nconst sortBy = (data: SessionData[], mode: Mode) =>\n{\n    let groups: { [key: string]: SessionData[] } = {};\n\n    data.forEach((item) =>\n    {\n        let sortVal = getSortValue(item, mode);\n        if (!groups[sortVal])\n        {\n            groups[sortVal] = [];\n        }\n        groups[sortVal].push(item);\n    });\n\n    let groupsOut = Object.keys(groups).sort().map(id => groups[id]);\n\n    return groupsOut;\n}\n\nconst addTab = (name: string, mode: string) =>\n{\n    return <Tab key={name} label={name} value={name} className={styles.tab} />\n};\n\nconst addMenuItem = ({ id, name }: { id: number, name: string }) =>\n{\n    return <MenuItem key={id} value={id} className={styles.menuItem}>{name}</MenuItem>\n};\n\nconst addSelect = (name: string, currentValue: number, setValue: (value: number) => void, values: { [key: number]: string }) =>\n{\n    const onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setValue(+e.target.value);\n    };\n\n    let arr = [{ id: -1, name: 'All' }].concat(Object.keys(values)\n                    .map(key => ({ id: +key, name: values[+key] }))\n                    .sort((a, b) => a.name.localeCompare(b.name)));\n\n    return (\n        <div className={styles.selectWrapper}>\n            <InputLabel className={styles.inputLabel} htmlFor={name}>{name}</InputLabel>\n            <Select\n                className={styles.select}\n                value={currentValue}\n                onChange={onChange}\n                inputProps={{\n                    id: name,\n                    name: name,\n                }}\n            >\n                {arr.map(addMenuItem)}\n            </Select>\n        </div>\n    );\n};\n\nconst renderHeader = (first: SessionData, mode: Mode, isExpanded: boolean, expand: () => void, indent: number) =>\n{\n    let content;\n    if (mode === Mode.Name)\n    {\n        content = (\n            <>\n                <div className={styles.name} onClick={expand}>{`${first.lastName}, ${first.firstName}`}</div>\n                <div className={styles.rank}>{first.rank}</div>\n            </>\n        );\n    }\n    else if (mode === Mode.Rank)\n    {\n        content = (\n            <>\n                <div className={styles.name} onClick={expand}>{first.rank}</div>\n            </>\n        );\n    }\n    else if (mode === Mode.Platform)\n    {\n        content = (\n            <>\n                <div className={styles.name} onClick={expand}>{first.platformName}</div>\n            </>\n        );\n    }\n    else if (mode === Mode.Test)\n    {\n        content = (\n            <>\n                <div className={styles.name} onClick={expand}>{first.testName}</div>\n            </>\n        );\n    }\n    else if (mode === Mode.Date)\n    {\n        content = (\n            <>\n                <div className={styles.name} onClick={expand}>{first.dateString}</div>\n            </>\n        );\n    }\n\n    return (\n        <div key={'h' + first.resultId} className={styles.row} style={{ paddingLeft: indent }}>\n            <IconButton className={styles.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={expand}>\n                {isExpanded ? <IconArrowDown /> : <IconArrowRight />}\n            </IconButton>\n            {content}\n        </div>\n    );\n}\n\nconst renderGroup = (groups: SessionData[][], expanded: ExpandedState, checked: CheckedState, mode: Mode, parentKey: string, indent: number, onClickExpand: (key: any) => void, setCheckedResult: (a: any, b: any) => void, onSelectSessions: (a: any) => void) =>\n{\n    return groups.map((group: SessionData[]) =>\n    {\n        let first = group[0],\n            key = parentKey + getSortValue(first, mode),\n            isExpanded = expanded[key],\n            expand = () => onClickExpand(key),\n            children;\n\n        if (isExpanded)\n        {\n            if (mode === Mode.Name)\n            {\n                children = group.map(row => (\n                    <div key={row.resultId} className={styles.row} style={{ paddingLeft: indent + Indent }}>\n                        <Checkbox color=\"primary\" checked={!!checked[row.resultId]} onChange={(e) => setCheckedResult(row.resultId, e.target.checked)} />\n                        <Button className={styles.nowrap} onClick={() => onSelectSessions([row])}>\n                            <div className={styles.platform}>{row.testName}</div>\n                            <div className={styles.date}>{row.platformName}</div>\n                            <div className={styles.date}>{row.dateString}</div>\n                            {/* <div className={styles.date}>{row.resultId + '  '}</div> */}\n                        </Button>\n                    </div>\n                ))\n            }\n            else\n            {\n                let subjects = sortBy(group, Mode.Name);\n                children = renderGroup(subjects, expanded, checked, Mode.Name, key, /*indent*/40, onClickExpand, setCheckedResult, onSelectSessions);\n            }\n        }\n\n        return (\n            <React.Fragment key={first.resultId}>\n                {renderHeader(first, mode, isExpanded, expand, indent)}\n                {children}\n            </React.Fragment>\n        );\n    })\n};\n\nconst SessionsComponent: React.FunctionComponent<PropsSessions> = (p: PropsSessions) =>\n{\n    const { data, sessionInfo, onSelectSessions } = p;\n    const [search, setSearch] = useState('');\n    const [mode, setMode] = useState(Mode.Name);\n    const [rank, setRank] = useState(-1);\n    const [test, setTest] = useState(-1);\n    const [platform, setPlatform] = useState(-1);\n    const [date, setDate] = useState(-1);\n    const [expanded, setExpanded] = useState<ExpandedState>({});\n    const [checked, setChecked] = useState<CheckedState>({});\n\n    let filtered = data.filter((item) => (\n                        // (rank === 'All' || item.rank === rank) &&\n                        (platform < 0 || item.platformId === platform) &&\n                        (test < 0 || item.testId === test) &&\n                        (date < 0 || item.date === date) &&\n                        (!search || filterSearch(item, search, mode))));\n\n    let results: { [ key: number ]: SessionData } = {};\n    filtered.forEach(it => {\n        results[it.resultId] = it;\n    });\n\n    let groups = sortBy(filtered, mode);\n\n    const onChangeTab = useCallback((e: any, value: any) =>\n    {\n        setExpanded({});\n        setMode(value);\n    }, []);\n\n    const onChangeSearch = useCallback((e: any) =>\n    {\n        setSearch(e.target.value.toLowerCase());\n    }, []);\n\n    const onClickExpand = useCallback((key: any) =>\n    {\n        let newVal = Object.assign({}, expanded);\n        newVal[key] = !newVal[key];\n\n        setExpanded(newVal);\n    }, [expanded]);\n\n    const setCheckedResult = useCallback((id: number, value: boolean) =>\n    {\n        let newChecked = Object.assign({}, checked, { [id]: value });\n        setChecked(newChecked);\n    }, [checked]);\n\n    const toggleAllChecked = useCallback(() =>\n    {\n        let newChecked: CheckedState = {};\n        if (Object.keys(checked).length === 0)\n        {\n            groups.forEach(group => group.forEach(session => { newChecked[session.resultId] = true; }));\n        }\n        setChecked(newChecked);\n    }, [checked, groups]);\n\n    const onClickCompare = useCallback(() =>\n    {\n        let sessions = Object.keys(checked).map(it => results[+it]);\n        if (sessions.length > 5)\n        {\n            let res = window.confirm(`Are you sure you want to compare ${sessions.length} sessions?`);\n            if (!res)\n            {\n                return;\n            }\n        }\n        onSelectSessions(sessions);\n    }, [checked, onSelectSessions, results]);\n\n    return (\n        <>\n            <Tabs className={styles.tabs} value={mode} onChange={onChangeTab}>\n                {addTab(Mode.Name, mode)}\n                {addTab(Mode.Rank, mode)}\n                {addTab(Mode.Platform, mode)}\n                {addTab(Mode.Test, mode)}\n                {addTab(Mode.Date, mode)}\n            </Tabs>\n            <Paper elevation={1}>\n                {!data && <span>Loading...</span>}\n                {data && (\n                    <div>\n                        <div className={`${styles.row} ${styles.headerRow}`}>\n                            <Checkbox key=\"checkbox\" color=\"primary\" checked={Object.keys(checked).length > 0} onChange={toggleAllChecked} />\n                            {Object.keys(checked).length ? (\n                                <>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={onClickCompare}>Compare</Button>\n                                </>\n                            ) : (\n                                    <>\n                                        <TextField\n                                            label={mode}\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            onChange={onChangeSearch}\n                                            InputProps={{ classes: { input: 'textField' } }}\n                                        />\n                                        {addSelect('Rank', rank, setRank, sessionInfo.ranks)}\n                                        {addSelect('Platform', platform, setPlatform, sessionInfo.platforms)}\n                                        {addSelect('Test', test, setTest, sessionInfo.tests)}\n                                        {addSelect('Date', date, setDate, sessionInfo.dates)}\n                                    </>\n                                )}\n                        </div>\n                        <div className={styles.rows}>\n                            {renderGroup(groups, expanded, checked, mode, '', 0, onClickExpand, setCheckedResult, p.onSelectSessions)}\n                        </div>\n                    </div>\n                )}\n            </Paper>\n        </>\n    )\n};\n\nconst Sessions: React.FunctionComponent<Props> = (p: Props) =>\n{\n    const [sessionData, setSessionData] = useState<{ data: SessionData[], sessionInfo: SessionInfo } | undefined>(undefined);\n\n    useEffect(() =>\n    {\n        const processData = (d: SessionData[]) =>\n        {\n            let out: SessionInfo = {\n                platforms: {},\n                ranks: {},\n                dates: {},\n                tests: {},\n                subjects: {}\n            }\n\n            d.forEach((it: any) =>\n            {\n                let date = new Date(it.dateCollected);\n                it.date = +date;\n                it.dateString = date.toDateString();\n                it.rankId = 0;\n                it.rank = 'Unknown Rank';\n                it.name = `${it.lastName}, ${it.firstName}`;\n\n                out.platforms[it.platformId] = it.platformName;\n                out.dates[it.date] = it.dateString;\n                out.subjects[it.subjectId] = it.name;\n                out.ranks[it.rankId] = it.rank;\n                out.tests[it.testId] = it.testName;\n            });\n\n            setSessionData({ data: d, sessionInfo: out });\n        }\n\n        fetchData('result/summary', p.user.token).then(async (data) =>\n        {\n            if (__DEV__)\n            {\n                localStorage.setItem('_test_summary', JSON.stringify(data));\n            }\n\n            processData(data);\n        });\n    }, [ p.user.token ]);\n\n    return (\n        <div className={styles.sessions}>\n            {sessionData && <SessionsComponent {...p} data={sessionData.data} sessionInfo={sessionData.sessionInfo} />}\n            {!sessionData && <span>Loading...</span>}\n        </div>\n    );\n}\n\nexport default Sessions;","import { __DEV__ } from './Constants';\n\nconst EnableCaching = __DEV__ && true;\n\nconst cache: { [key: string]: any } = {};\n\nexport const fetchData = async (url: string, token: string | undefined, options?: { [ key: string ]: any }) =>\n{\n    if (cache[url])\n    {\n        return cache[url];\n    }\n\n    let resultData = EnableCaching && localStorage.getItem(`_cache_${url}`);\n    if (resultData)\n    {\n        return JSON.parse(resultData);\n    }\n    else\n    {\n        options = options || {};\n        options.headers = options.headers || {};\n        options.headers['Content-Type'] = 'application/json';\n        if (token)\n        {\n            options.headers['Authorization'] = 'Bearer ' + token;\n        }\n\n        let result = await fetch(`https://eyenetservice20190228013441.azurewebsites.net/v1/${url}`, options);\n\n        if (result.ok)\n        {\n            let data = await result.json();\n\n            cache[url] = data;\n            if (EnableCaching)\n            {\n                localStorage.setItem(`_cache_${url}`, JSON.stringify(data));\n            }\n            return data;\n        }\n\n        // TODO: Error handling\n    }\n};","export const __DEV__ = process.env.NODE_ENV !== 'production';\nexport interface User {\n    token: string\n}\nexport interface SessionData {\n    date: number;\n    dateString: string;\n    name: string;\n    firstName: string;\n    lastName: string;\n    platformId: number;\n    platformName: string;\n    resultId: number;\n    subjectId: number;\n    testId: number;\n    testName: string;\n    rankId: number;\n    rank: string;\n}\n\nexport interface SessionResults {\n    session: SessionData;\n    resultData: Array<{ leftValue: number, rightValue: number, time: number }>;\n}","import React, { useCallback, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport styles from './Login.module.css';\nimport { fetchData } from './DataManager';\nimport { __DEV__, User } from './Constants';\n\ninterface Props {\n    onLogin: (user: User) => void;\n}\nconst Login: React.FunctionComponent<Props> = (p: Props) =>\n{\n    let onLogin = p.onLogin,\n        [username, setUsername] = useState(''),\n        [password, setPassword] = useState('');\n\n    const login = useCallback(async () => {\n        let value = await fetchData('authenticate', undefined, {\n                            method: 'POST',\n                            body: JSON.stringify({\n                                Username: username,\n                                Password: password\n                            })\n                        });\n\n        if (__DEV__)\n        {\n            localStorage.setItem('user', JSON.stringify(value));\n        }\n        onLogin(value);\n    }, [ onLogin, username, password ]);\n\n    const onKeyPress = useCallback((e: React.KeyboardEvent) => {\n        if (e.key === 'Enter')\n        {\n            login();\n        }\n    }, [ login ]);\n\n    return (\n        <Grid\n            className={styles.container}\n            container\n            spacing={16}\n            justify=\"center\"\n            alignItems=\"center\"\n            direction=\"row\"\n        >\n            <Grid item>\n                <h1 className={styles.logo}>\n                    EyeTracking\n                </h1>\n                <Paper className={styles.loginBox}>\n                    <div className={styles.textWrap}>\n                        <TextField className={styles.textField} label=\"Username\" onChange={e => setUsername(e.target.value)} onKeyPress={onKeyPress} />\n                    </div>\n                    <div className={styles.textWrap}>\n                        <TextField className={styles.textField} label=\"Password\" onChange={e => setPassword(e.target.value)} onKeyPress={onKeyPress} />\n                    </div>\n                    <div className={styles.buttonWrap}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={login}>\n                            Login\n                        </Button>\n                    </div>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport styles from'./SessionDetails.module.css';\nimport { SessionResults, SessionData } from './Constants';\nimport { Typography, Card, CardContent, Select, MenuItem } from '@material-ui/core';\nimport IconArrowUp from '@material-ui/icons/ArrowUpward';\nimport IconArrowDown from '@material-ui/icons/ArrowDownward';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchData } from './DataManager';\n\ninterface Props\n{\n    user: any;\n    sessions: SessionData[];\n}\n\ninterface HighchartLine {\n    name: string,\n    data: number[];\n}\n\ntype Algorithm = 'Raw' | 'Sum';\nconst Algorithms = [ 'Raw', 'Sum' ];\n\nconst getChartOptions = (lines: HighchartLine[], sessions: SessionResults[]): Highcharts.Options =>\n{\n    // let titles = sessions.map(res => `<b>${res.session.name}</b>: ${res.session.testName}`),\n    //      title = titles.length > 1 ? ('Comparing: ' + titles.join(', ')) : titles[0];\n\n    return {\n        chart: {\n            zoomType: 'x'\n        },\n        title: {\n            text: ''\n        },\n        xAxis: {\n            title: {\n                text: 'Time'\n            }\n        },\n        yAxis: {\n            title: {\n                text: 'Workload'\n            }\n        },\n        series: lines.map(line => ({\n            type: 'line',\n            name: line.name,\n            data: line.data\n        }))\n    };\n}\n\nconst Subjects: React.FunctionComponent<Props> = (p: Props) =>\n{\n    const { sessions } = p,\n          token = p.user.token;\n\n    const [ results, setResults ] = useState<SessionResults[] | undefined>(undefined);\n    const [ algorithm, setAlgorithm ] = useState<Algorithm>('Sum');\n    const [ chartOptions, setChartOptions ] = useState<Highcharts.Options>(getChartOptions([], []));\n\n    useEffect(() =>\n    {\n        if (results)\n        {\n            let lines: HighchartLine[] = [];\n\n            let processResults: (resultData: number[]) => number[];\n\n            if (algorithm === 'Sum')\n            {\n                processResults = (resultData: number[]) => {\n                    var data: number[] = [];\n                    resultData.reduce((a, b, i) => { return data[i] = +(a + b).toFixed(2); }, 0);\n                    return data;\n                };\n            }\n            else\n            {\n                processResults = (resultData: number[]) => resultData;\n            }\n\n            results.forEach((result, i) =>\n            {\n                let session = result.session,\n                    resultData = result.resultData.map(d => (Math.max(0, d.leftValue) + Math.max(d.rightValue, 0)) / 2),\n                    data = processResults(resultData);\n\n                lines.push({\n                    name: session.testName,\n                    data\n                });\n            });\n\n            setChartOptions(getChartOptions(lines, results));\n        }\n    }, [ results, algorithm ]);\n\n    useEffect(() =>\n    {\n        Promise.all(sessions.map(async (session) =>\n        {\n            const processData = (resultData: any) =>\n            {\n                return {\n                    session,\n                    resultData\n                };\n            };\n\n            let data = await fetchData(`result/workloaddata/${session.resultId}`, token);\n\n            return processData(data);\n        })).then((res: SessionResults[]) =>\n        {\n            setResults(res);\n        });\n    }, [token, sessions]);\n\n    return results ? (\n        <div className={styles.sessionDetails}>\n            <div className={`${styles.card} ${styles.personDetails}`}>\n                {sessions.map(session => (\n                    <span key={session.resultId}>\n                        <div className={styles.name}>{session.name}</div>\n                        <div className={styles.light}>{session.rank}</div>\n                        <div className={styles.light}>{session.platformName}</div>\n                        <div className={styles.light}>{session.dateString}</div>\n                    </span>\n                ))}\n            </div>\n            <Card className={`${styles.card} ${styles.chartCard}`}>\n                <CardContent className={styles.cardContent}>\n                    <Typography className={styles.title} color=\"textSecondary\">\n                        Results\n                    </Typography>\n                    <Select\n                        className={styles.selectAlgorithm}\n                        value={algorithm}\n                        onChange={(e) => setAlgorithm(e.target.value as Algorithm)}\n                    >\n                        {Algorithms.map(alg => <MenuItem key={alg} value={alg} className={styles.menuItem}>{alg}</MenuItem>)}\n                    </Select>\n                    <HighchartsReact\n                        className={styles.chart}\n                        highcharts={Highcharts}\n                        options={chartOptions}\n                    />\n                </CardContent>\n            </Card>\n            <Card className={`${styles.card} ${styles.highlights}`}>\n                <CardContent className={styles.cardContent}>\n                    <Typography className={styles.title} color=\"textSecondary\">\n                        Highlights\n                    </Typography>\n                    <Typography className={styles.highlightsContent}>\n                        <span className={styles.highlightsText}>Workload</span><IconArrowUp fontSize=\"small\" className={`${styles.icon} ${styles.arrowUp}`} /> 3%\n                        </Typography>\n                    <Typography className={styles.highlightsContent}>\n                        <span className={styles.highlightsText}>Time</span><IconArrowDown fontSize=\"small\" className={`${styles.icon} ${styles.arrowDown}`} /> 2%\n                        </Typography>\n                    <Typography className={styles.highlightsContent}>\n                        <span className={styles.highlightsText}>Scan Efficiency</span><IconArrowUp fontSize=\"small\" className={`${styles.icon} ${styles.arrowUp}`} /> 5%\n                        </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    ) : (\n        <div className={styles.loading}>\n            <div>Loading...</div>\n        </div>\n    );\n}\n\nexport default Subjects;","import React, { useState, useCallback } from 'react';\nimport Sessions from './Sessions';\nimport SessionDetails from './SessionDetails';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconBack from '@material-ui/icons/ArrowBack';\nimport IconPerson from '@material-ui/icons/Person';\nimport styles from './Main.module.css';\nimport { User, SessionData, __DEV__ } from './Constants';\n\ninterface Props {\n    user: User;\n}\n// enum Mode {\n//     Sessions = 'Sessions',\n//     SessionDetails = 'Session Details',\n// }\n\nconst Main: React.FunctionComponent<Props> = (p: Props) =>\n{\n    let [selectedSessions, setSelectedSessions] = useState<SessionData[] | undefined>(undefined);\n    const goBack = useCallback(() => setSelectedSessions(undefined), []);\n    const onSelectSessions = useCallback((sessions) => {\n        if (__DEV__)\n        {\n            localStorage.setItem('sessions', JSON.stringify(sessions));\n        }\n        setSelectedSessions(sessions);\n    }, [ setSelectedSessions ]);\n\n    // if (__DEV__)\n    // {\n    //     let saved = localStorage.getItem('sessions');\n    //     if (saved)\n    //     {\n    //         selectedSessions = JSON.parse(saved);\n    //     }\n    // }\n\n    return (\n        <div className={styles.container}>\n            <AppBar position=\"static\" className={styles.appBar}>\n                <Toolbar>\n                    {selectedSessions && (\n                        <IconButton className={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                            <IconBack onClick={goBack} />\n                        </IconButton>\n                    )}\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        {selectedSessions ? 'Session Details' : 'Sessions'}\n                    </Typography>\n                    <div className={styles.grow} />\n                    <Button className={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <IconPerson className={styles.person} />\n                        User\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <div className={styles.main}>\n                {selectedSessions && <SessionDetails user={p.user} sessions={selectedSessions} />}\n                {!selectedSessions && <Sessions user={p.user} onSelectSessions={onSelectSessions} />}\n            </div>\n        </div>\n    );\n}\n\nexport default Main;","import React, { useState, useCallback } from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport styles from './App.module.css';\nimport 'typeface-roboto';\nimport Login from './Login';\nimport Main from './Main';\n\nimport { __DEV__, User } from './Constants';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        primary: {\n            light: '#69b6ff',\n            main: '#1c87e5',\n            dark: '#005bb2',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ff94c2',\n            main: '#f06292',\n            dark: '#ba2d65',\n            contrastText: '#fff',\n        },\n    },\n});\n\nconst App: React.FunctionComponent = () => {\n    const [ user, setUser ] = useState<User | undefined>(__DEV__ ?\n                                    () => {\n                                        let value = localStorage.getItem('user');\n                                        if (value)\n                                        {\n                                            return JSON.parse(value) as User;\n                                        }\n                                    } :\n                                    undefined);\n\n    const onLogin = useCallback((loggedInUser: any) => {\n        setUser(loggedInUser);\n    }, []);\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <div className={styles.App}>\n                {!user && <Login onLogin={onLogin} />}\n                {user && (\n                    <Main user={user} />\n                )}\n            </div>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sessionDetails\":\"SessionDetails_sessionDetails__365kB\",\"card\":\"SessionDetails_card__3E97H\",\"personDetails\":\"SessionDetails_personDetails__VZ9AD\",\"name\":\"SessionDetails_name__UEzSR\",\"light\":\"SessionDetails_light__3KWXC\",\"cardContent\":\"SessionDetails_cardContent__1bB-u\",\"highlights\":\"SessionDetails_highlights__TJ4nQ\",\"title\":\"SessionDetails_title__1F3Sb\",\"icon\":\"SessionDetails_icon__pjM0N\",\"arrowUp\":\"SessionDetails_arrowUp__1_Jpe\",\"arrowDown\":\"SessionDetails_arrowDown__JRYVg\",\"highlightsText\":\"SessionDetails_highlightsText__1wOo_\",\"highlightsContent\":\"SessionDetails_highlightsContent__1SMh7\",\"loading\":\"SessionDetails_loading__17gOV\",\"selectAlgorithm\":\"SessionDetails_selectAlgorithm__-28GZ\",\"menuItem\":\"SessionDetails_menuItem__1NNS-\"};"],"sourceRoot":""}